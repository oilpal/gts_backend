<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.services.ho.repository.HO01010Repository">

	<!-- 오류 목록 체크 리스트 -->
	<select id="getErrorList" parameterType="java.util.HashMap" resultType="com.neofect.gts.services.ho.domain.HO01010">
	/* com.neofect.gts.services.ho.repository.HO01010Repository.getErrorList */
	  SELECT M.DEPT_ID,
	  		 P.DEPT_NAME, 
		     M.MEMBER_ID,
		     R.NAME,
		     M.CUST_ID,
		     Q.CUST_NAME,
		     SUM(CASE
		         WHEN O.CONT_SEQ IS NULL
		         OR (M.PLAN_DATE NOT BETWEEN O.CONT_SDATE AND O.CONT_EDATE)
		         OR (M.PLAN_DATE NOT BETWEEN O.CARE_SDATE AND O.CARE_EDATE)
		         OR (M.PLAN_DATE > O.CANCEL_DATE) THEN 0
		         ELSE 1
		         END) AS OK_CNT,
		     SUM(CASE
		         WHEN O.CONT_SEQ IS NULL
		         OR (M.PLAN_DATE NOT BETWEEN O.CONT_SDATE AND O.CONT_EDATE)
		         OR (M.PLAN_DATE NOT BETWEEN O.CARE_SDATE AND O.CARE_EDATE)
		         OR (M.PLAN_DATE > O.CANCEL_DATE) THEN 1
		         ELSE 0
		         END) AS ERR_CNT,
		     SUM(1) AS TOTAL_CNT
	  FROM SERVICE_SCHEDULE M INNER JOIN ( SELECT A.DEPT_ID, A.MEMBER_ID
		                                   FROM SERVICE_SCHEDULE A LEFT JOIN SERVICE_CONTRACT B ON A.CUST_ID = B.CUST_ID AND A.CONT_SEQ = B.CONT_SEQ
                                           INNER JOIN CODE_PRODUCT F ON A.PRODUCT_ID = F.PRODUCT_ID
                                           WHERE A.PLAN_DATE BETWEEN TO_DATE(#as_yymm#||'01') AND LAST_DAY(TO_DATE(#as_yymm#||'01'))
                                           AND A.MEMBER_ID IS NOT NULL
                                           AND A.DEPT_ID LIKE #as_dept#
                                           AND F.PRODUCT_CODE NOT LIKE 'Z%'
                                           AND (A.CONT_SEQ IS NULL
                                       	   OR (A.PLAN_DATE NOT BETWEEN B.CONT_SDATE AND B.CONT_EDATE)
		                                   OR (A.PLAN_DATE NOT BETWEEN B.CARE_SDATE AND B.CARE_EDATE) 
		                                   OR A.PLAN_DATE > B.CANCEL_DATE)
		                                   GROUP BY A.DEPT_ID, A.MEMBER_ID ) N ON M.DEPT_ID = N.DEPT_ID AND M.MEMBER_ID = N.MEMBER_ID
		                                   LEFT JOIN SERVICE_CONTRACT O ON M.CUST_ID = O.CUST_ID AND M.CONT_SEQ = O.CONT_SEQ
		                                   LEFT JOIN CODE_DEPT P ON M.DEPT_ID = P.DEPT_ID
		                                   LEFT JOIN CODE_CUST Q ON M.CUST_ID = Q.CUST_ID
		                                   LEFT JOIN CODE_MEMBER R ON M.MEMBER_ID = R.MEMBER_ID
		                                   LEFT JOIN CODE_PRODUCT S ON M.PRODUCT_ID = S.PRODUCT_ID
	 WHERE M.PLAN_DATE BETWEEN TO_DATE(#{yymm}||'01') AND LAST_DAY(TO_DATE(#{yymm}||'01'))
	 GROUP BY M.DEPT_ID, P.DEPT_NAME, M.MEMBER_ID, R.NAME, M.CUST_ID, Q.CUST_NAME
	 HAVING SUM(CASE
		        WHEN O.CONT_SEQ IS NULL
		        OR (M.PLAN_DATE NOT BETWEEN O.CONT_SDATE AND O.CONT_EDATE)
		        OR (M.PLAN_DATE NOT BETWEEN O.CARE_SDATE AND O.CARE_EDATE)
		        OR (M.PLAN_DATE > O.CANCEL_DATE) THEN 1
		        ELSE 0
		        END) > 0
		ORDER BY 1, 3, 5
	</select>

	<!-- 오류목록체크 상세 -->
	<select id="getErrorDetail" parameterType="java.util.HashMap" resultType="com.neofect.gts.services.ho.domain.HO01010">
	/* com.neofect.gts.services.ho.repository.HO01010Repository.getErrorDetail */
	SELECT A.PLAN_DATE,
		   B.CONT_SDATE,
		   B.CONT_EDATE,
		   B.CARE_SDATE,
		   B.CARE_EDATE,
		   B.CANCEL_DATE,
		   A.START_TIME_DIV||':'||
		   A.START_MIN_DIV||'-'||
		   A.END_TIME_DIV||':'||
		   A.END_MIN_DIV AS SVC_TIME,
	       A.PRODUCT_ID,
		   C.PRODUCT_NAME
    FROM SERVICE_SCHEDULE A LEFT JOIN SERVICE_CONTRACT B ON  A.CUST_ID = B.CUST_ID AND A.CONT_SEQ = B.CONT_SEQ
		 LEFT JOIN CODE_PRODUCT C ON A.PRODUCT_ID = C.PRODUCT_ID
	WHERE A.DEPT_ID = #{dept}
	AND A.PLAN_DATE BETWEEN TO_DATE(#{yymm}||'01') AND LAST_DAY(TO_DATE(#{yymm}||'01'))
	AND A.CUST_ID = #{cust}
	AND A.MEMBER_ID = #{member}
	ORDER BY A.PLAN_DATE
	</select>
	

</mapper>