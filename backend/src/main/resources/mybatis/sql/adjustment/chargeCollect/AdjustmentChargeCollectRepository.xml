<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.services.adjustment.chargeCollect.repository.AdjustmentChargeCollectRepository">
	<!-- 미수금현황 GS01080_R01 -->
	<select id="getCARList" parameterType="java.util.HashMap" resultType="com.neofect.gts.services.adjustment.chargeCollect.domain.AdjustmentChargeCollect">
		<![CDATA[

		SELECT	
			A.DEPT_ID,
			A.CUST_ID,
			B.CUST_CODE,
			B.CUST_NAME,
			B.BIRTH_DATE,
			SUM(A.PAY_AMT) AS PAY_AM,
			SUM(A.PAY_AMT) - F_GS_GET_SERVICE_PAID_AMT2(A.DEPT_ID,A.CUST_ID) AS MISU_AM,
			SUM(CASE WHEN A.YYYYMM=#{yyyymm} THEN A.PAY_AMT + A.BPAY_AMT ELSE 0 END) AS THIS_PAY_AM,
			SUM(A.REQ_AMT) AS REQ_AM,
			F_GS_GET_SERVICE_PAID_AMT2(A.DEPT_ID,A.CUST_ID)	AS PAIDAMT 
		FROM
			SERVICE_PAY_SUM		A
		LEFT JOIN
			CODE_CUST B ON B.CUST_ID = A.CUST_ID
		WHERE	
			A.DEPT_ID LIKE #{deptId}
			AND A.YYYYMM <= #{yyyymm}
			AND (B.CUST_CODE LIKE #{custCode} OR B.CUST_NAME LIKE #{custCode})
			AND (
				#{reductionDiv} = '%'
				OR (#{reductionDiv} = 'G' AND (B.REDUCTION_DIV IS NULL OR B.REDUCTION_DIV='G'))
				OR (#{reductionDiv} != 'G' AND	B.REDUCTION_DIV = #{reductionDiv})
			)
		GROUP BY	
			A.DEPT_ID, A.CUST_ID, B.CUST_CODE, B.CUST_NAME, B.BIRTH_DATE 
		HAVING
			SUM(CASE WHEN A.YYYYMM=#{yyyymm} THEN A.PAY_AMT ELSE 0 END) > 0 
			OR (SUM(A.PAY_AMT) > F_GS_GET_SERVICE_PAID_AMT2(A.DEPT_ID,A.CUST_ID))
			OR SUM(CASE WHEN A.YYYYMM=#{yyyymm} THEN A.REQ_AMT ELSE 0 END) > 0
		ORDER BY
			A.DEPT_ID, B.CUST_NAME 

		]]>
	</select>


	<!-- 월별정산내역  GS01080_R02-->
	<select id="getMSHList" parameterType="java.util.HashMap" resultType="com.neofect.gts.services.adjustment.chargeCollect.domain.AdjustmentChargeCollect">
		<![CDATA[

		SELECT 
			A.DEPT_ID, 
			A.YYYYMM,
			A.PAY_AMT, 
			NVL(SUM(C.PAY_AMT), 0) AS PAIDAMT,
			A.PAY_AMT - NVL(SUM(C.PAY_AMT), 0) AS MISU_AMT,
			A.REQ_AMT,
			MAX(C.PAY_DATE) AS PAY_DATE
		FROM (
			SELECT
				A.DEPT_ID,
				A.CUST_ID,   
				TO_CHAR(A.PLAN_DATE,'YYYYMM') as YYYYMM,
				SUM(A.PAY_AMT) as PAY_AMT,
				SUM(A.REQ_AMT) AS REQ_AMT
			FROM 
				SERVICE_SCHEDULE A
			WHERE 
				A.DEPT_ID = #{deptId}
				AND A.CUST_ID = #{custId}
			GROUP BY 
				A.DEPT_ID, A.CUST_ID, TO_CHAR(A.PLAN_DATE,'YYYYMM')
			) A 
		LEFT OUTER JOIN 
			SERVICE_PAY_RECEIPT C ON A.DEPT_ID = C.DEPT_ID AND A.CUST_ID = C.CUST_ID AND A.YYYYMM = C.REQ_YYMM
		WHERE 
			A.YYYYMM <= #{yyyymm}
		GROUP BY 
			A.DEPT_ID, A.YYYYMM, A.PAY_AMT, A.REQ_AMT 
		ORDER BY 
			A.YYYYMM

		]]>
	</select>


	<!-- 입급내역 GS01080_C03-->
	<select id="getDHList" parameterType="java.util.HashMap" resultType="com.neofect.gts.services.adjustment.chargeCollect.domain.AdjustmentChargeCollect">
		SELECT	
			A.DEPT_ID,
			A.CUST_ID,
			A.CHECK_YN,
			A.REQ_YYMM,
			A.PAY_DATE,
			A.CARD_AMT,
			A.BANK_AMT,
			A.VBANK_AMT,
			A.JIRO_AMT,
			A.DEPOSITNO,
			A.DEPOSIT_NAME,
			A.VBANK_DEPOSIT,
			A.REMARK,
			A.PAY_AMT,
			A.CASH_AMT,
			A.REQ_AMT,
			A.ENTER_ID,
			A.ENTER_DATE,
			A.EDIT_ID,
			A.EDIT_DATE  
		FROM 
			SERVICE_PAY_RECEIPT A 
		WHERE 
			A.DEPT_ID = #{deptId}
		AND 
			A.CUST_ID = #{custId}
		ORDER BY
			A.PAY_DATE
	</select>



	<!-- 급여비용명세서엑셀 GUBYEBIYONGXLS_R01 -->
	<select id="getSESList" parameterType="java.util.HashMap" resultType="com.neofect.gts.services.adjustment.chargeCollect.domain.AdjustmentChargeCollect">
		SELECT 
			FN_GS_GET_PRINT_DEPTNAME(B.DEPT_NAME) AS DEPT_NAME,
			B.SERVICE_CODE,
			B.ADDR1 ||' '|| B.ADDR2 AS ADDR,
			CASE LENGTH(B.BIZ_NO) 
				WHEN 10 THEN SUBSTR(B.BIZ_NO, 1, 3)||'-'||SUBSTR(B.BIZ_NO, 4,2)||'-'||SUBSTR(B.BIZ_NO, 6,5)
				ELSE B.BIZ_NO
			END AS BIZ_NO,
			B.OWNER_NAME,
			M.CUST_ID,
			A.CUST_NAME,
			'L'||A.MANAGE_NO1||'-'||A.MANAGE_NO2 AS MANAGENO,
			M.DEPT_ID,
			M.YYYYMM,
			TO_CHAR(TO_DATE(M.YYYYMM||'01', 'YYYYMMDD'), 'YYYY.MM.DD') AS FROMDATE,
			TO_CHAR(LAST_DAY(TO_DATE(M.YYYYMM||'01', 'YYYYMMDD')), 'YYYY.MM.DD') AS TODATE,
			SUM(M.SERVICE_AMT) AS SERVICE_AMT,
			SUM(M.REQ_AMT) AS REQ_AMT,
			SUM(M.PAY_AMT) AS PAY_AMT,
			SUM(M.B_AMT) AS B_AMT,
			SUM(M.SERVICE_AMT) + SUM(M.B_AMT) AS TOTAL_AMT,
			SUM(M.PAY_B_AMT) AS PAY_B_AMT
		FROM 
			SERVICE_SUMMARY_SUM M
		LEFT JOIN 
			CODE_CUST A ON M.CUST_ID = A.CUST_ID
		LEFT JOIN 
			CODE_DEPT B ON M.DEPT_ID = B.DEPT_ID
		WHERE
			M.DEPT_ID = #{deptId}
			AND M.CUST_ID = #{custId}
			AND M.YYYYMM = #{yyyymm}
		GROUP BY 
			B.DEPT_NAME, B.SERVICE_CODE, B.ADDR1, B.ADDR2, B.BIZ_NO, B.OWNER_NAME, M.CUST_ID, A.CUST_NAME, A.MANAGE_NO1, A.MANAGE_NO2, M.DEPT_ID, M.YYYYMM
	</select>
</mapper>