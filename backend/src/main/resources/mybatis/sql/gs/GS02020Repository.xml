<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.services.gs.repository.GS02020Repository">
		<select id="GS02020_C01" parameterType="com.neofect.gts.services.gs.domain.GS02020" resultType="com.neofect.gts.services.gs.domain.GS02020">

		SELECT	A.MEMBER_ID,
			A.DEPT_ID,
			A.YYYYMM,
			A.WORK_TYPE,
			D.DEPT_NAME,
			B.EMP_NO,
			B.NAME,
			X_DECRYPT(B.RRN_NO) AS INPUT_RRN_NO,
			C.COMDIV_NAME AS WORK_TYPE_NAME,
			A.PAY_TOTAL,
			A.PAY_BASIC,
			A.PAY_WEEK,
			A.PAY_VACATION,
			A.PAY_ETC,
			A.WORK_DAYS,
			A.HOUR_TOTAL,
			A.HOUR_BASIC,
			A.HOUR_EXTRA,
			A.HOUR_NIGHT,
			A.HOUR_HOLIDAY,
			A.AMT_INCENTIVE,
			A.AMT_BASIC,
			A.AMT_WEEK,
			A.AMT_VACATION,
			A.AMT_EXTRA,
			A.AMT_NIGHT,
			A.AMT_HOLIDAY,
			A.AMT_ETC,
			A.AMT_SPECIAL,
			A.AMT_INCENTIVE + A.AMT_BASIC + A.AMT_WEEK + A.AMT_VACATION + A.AMT_EXTRA + A.AMT_NIGHT + A.AMT_HOLIDAY + A.AMT_ETC + A.AMT_SPECIAL	AS TOT_PAY_AMT,
			A.REMARK,
			A.PAY_INCENTIVE,
			C.NAME1 AS PRODUCT_SNAME
		FROM	MEMBER_PAY_SRC	A
			LEFT JOIN CODE_MEMBER B
				ON A.MEMBER_ID = B.MEMBER_ID
			LEFT JOIN CODE_COMDIV C
				ON C.COMSEC_CODE='0320'
				AND A.WORK_TYPE = C.COMDIV_CODE
			LEFT JOIN CODE_DEPT D
				ON A.DEPT_ID = D.DEPT_ID
		WHERE	A.DEPT_ID LIKE	#{deptId}
		AND		A.YYYYMM		=	#{yyyymm}
		ORDER BY D.DEPT_NAME, B.NAME

	</select>


	<select id="GS02020_C02" parameterType="com.neofect.gts.services.gs.domain.GS02020" resultType="com.neofect.gts.services.gs.domain.GS02020">

		SELECT	A.MEMBER_ID,
			A.DEPT_ID,
			A.YYYYMM,
			D.DEPT_NAME,
			B.EMP_NO,
			B.NAME AS MEMBER_NAME,
			B.REG_CODE,
			A.PAY_DATE,
			A.TOTAL_AMT,
			A.WORK_DAYS,
			A.TOTAL_HOUR,
			A.TAXABLE_AMT,
			A.NOTTAXABLE_AMT,
			A.INCOME_TAX_AMT,
			A.RESIDENCE_TAX_AMT,
			A.PENSION_AMT,
			A.HEALTHINSURE_AMT,
			A.LONGTERM_AMT,
			A.EMPLOYINSURE_AMT,
			A.TOTAL_INCENTIVE_AMT,
			A.ETCDEDUCTION_AMT,
			A.INCOME_TAX_AMT + A.RESIDENCE_TAX_AMT + A.PENSION_AMT + A.HEALTHINSURE_AMT + A.LONGTERM_AMT + A.EMPLOYINSURE_AMT + A.TOTAL_INCENTIVE_AMT + A.ETCDEDUCTION_AMT	AS DEDUCTION_AMT,
			A.TOTAL_AMT -  (A.INCOME_TAX_AMT + A.RESIDENCE_TAX_AMT + A.PENSION_AMT + A.HEALTHINSURE_AMT + A.LONGTERM_AMT + A.EMPLOYINSURE_AMT + A.TOTAL_INCENTIVE_AMT + A.ETCDEDUCTION_AMT)	AS PAY_TOT_AMT,
			(A.TOTAL_AMT -  (A.INCOME_TAX_AMT + A.RESIDENCE_TAX_AMT + A.PENSION_AMT + A.HEALTHINSURE_AMT + A.LONGTERM_AMT + A.EMPLOYINSURE_AMT + A.TOTAL_INCENTIVE_AMT + A.ETCDEDUCTION_AMT)) - A.TOTAL_INCENTIVE_AMT	AS REAL_PAY_AMT,
			A.REMARK,
			A.BANK_DIV,
			C.COMDIV_NAME AS BANK_NAME,
			A.DEPOSITNO,
			B.DEPOSITOWNER,
			A.C_HEALTHINSURE_AMT,
			A.C_PENSION_AMT,
			A.C_INDACC_AMT,
			A.C_EMPINSU_AMT,
			A.C_LONGTERM_AMT,
			A.C_RETIRE_AMT,
			A.C_EMPINSU2_AMT,
			A.MEMBER_AGE,
			A.DEDUCT_CNT
		FROM	MEMBER_PAYMENT	A
				LEFT JOIN CODE_MEMBER B
			ON A.MEMBER_ID = B.MEMBER_ID
			LEFT JOIN CODE_COMDIV C
				ON A.BANK_DIV = C.COMDIV_CODE
				AND C.COMSEC_CODE = '0100'
			LEFT JOIN CODE_DEPT D
				ON A.DEPT_ID = D.DEPT_ID
		WHERE	A.DEPT_ID LIKE	#{deptId}
		AND		A.YYYYMM		=	#{yyyymm}
		ORDER BY	D.DEPT_NAME, B.NAME
	</select>


	<select id="GS02020_R03" parameterType="com.neofect.gts.services.gs.domain.GS02020" resultType="com.neofect.gts.services.gs.domain.GS02020">

		SELECT	A.SERVICE_YN,
			A.DEPT_ID,
			B.DEPT_NAME,
			A.MEMBER_ID,
			C.NAME as MEMBER_NAME,
			A.CUST_ID,
			D.CUST_CODE,
			D.CUST_NAME,
			NVL(C.FAMILY_YN, 'N') FAMILY_YN,
			A.PLAN_DATE,
			A.START_TIME_DIV||':'||A.START_MIN_DIV as START_TIME,
			A.END_TIME_DIV||':'||A.END_MIN_DIV as END_TIME,
			A.SERVICE_MIN,
			A.PRODUCT_ID,
			E.PRODUCT_CODE,
			E.PRODUCT_NAME,
			A.SERVICE_AMT,
			A.PAY_AMT,
			A.REQ_AMT,
			ROUND(FN_GS_GET_SERVICE_PAY_MIN(TO_CHAR(A.PLAN_DATE, 'YYYYMMDD'), A.START_TIME_DIV, A.START_MIN_DIV, A.END_TIME_DIV, A.END_MIN_DIV, A.SERVICE_AMT, A.FAMILY_YN, A.PRODUCT_ID, E.PRODUCT_DIV, S.CUST_LEVEL_DIV, '1')/60, 1) AS PAY_MIN_1,
			ROUND(FN_GS_GET_SERVICE_PAY_MIN(TO_CHAR(A.PLAN_DATE, 'YYYYMMDD'), A.START_TIME_DIV, A.START_MIN_DIV, A.END_TIME_DIV, A.END_MIN_DIV, A.SERVICE_AMT, A.FAMILY_YN, A.PRODUCT_ID, E.PRODUCT_DIV, S.CUST_LEVEL_DIV, '2')/60, 1) AS PAY_MIN_2,
			ROUND(FN_GS_GET_SERVICE_PAY_MIN(TO_CHAR(A.PLAN_DATE, 'YYYYMMDD'), A.START_TIME_DIV, A.START_MIN_DIV, A.END_TIME_DIV, A.END_MIN_DIV, A.SERVICE_AMT, A.FAMILY_YN, A.PRODUCT_ID, E.PRODUCT_DIV, S.CUST_LEVEL_DIV, '3')/60, 1) AS PAY_MIN_3,
			ROUND(A.SERVICE_MIN_1 / 60, 1) SERVICE_MIN_1,
			ROUND(A.SERVICE_MIN_2 / 60, 1) SERVICE_MIN_2,
			ROUND(A.SERVICE_MIN_3 / 60, 1) SERVICE_MIN_3,
			A.SERVICE_YN_DIV,
			A.SERVICE_REMARK,
			A.REMAIN_AMT,
			A.REMARK,
			A.WON_MEMBER_ID,
			A.COMPLAIN_MEMO,
			A.CARER_MEMO,
			A.ENTER_ID,
			A.ENTER_DATE,
			A.EDIT_ID,
			A.EDIT_DATE,
			A.SMS_YN,
			A.STATUS,
			A.CARER_MEMOYN,
			A.CARER_DATE,
			A.DEPT_MEMOYN,
			A.DEPT_DATE,
			A.DUPLISERVICE_YN,
			A.SERVICE_COST
		FROM	SERVICE_SCHEDULE	A
			LEFT JOIN	CODE_DEPT	B
				ON	B.DEPT_ID	=	A.DEPT_ID
			LEFT JOIN	CODE_MEMBER	C
				ON	C.MEMBER_ID	=	A.MEMBER_ID
			LEFT JOIN	CODE_CUST	D
				ON	D.CUST_ID	=	A.CUST_ID
			LEFT JOIN	CODE_PRODUCT	E
				ON	E.PRODUCT_ID	=	A.PRODUCT_ID
			LEFT JOIN	SERVICE_CONTRACT	S
				ON	S.CUST_ID	=	A.CUST_ID
				AND	S.CONT_SEQ	=	A.CONT_SEQ
		WHERE	A.DEPT_ID LIKE #{deptId}
		AND		A.SERVICE_YN like #{serviceYn}
		AND		(A.MEMBER_ID like #{memberId} or C.NAME like #{memberId})
		AND		(D.CUST_CODE like #{custCode} or D.CUST_NAME like #{custCode})
		AND		PLAN_DATE between #{fromDate#} and #{toDate}
		ORDER BY A.DEPT_ID, A.PLAN_DATE, START_TIME
	</select>
</mapper>